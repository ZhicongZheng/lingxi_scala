[
  {
    "name": "[B"
  },
  {
    "name": "[I"
  },
  {
    "name": "[Lakka.actor.LightArrayRevolverScheduler$TaskQueue;"
  },
  {
    "name": "[Lakka.stream.stage.GraphStageLogic;"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.deser.Deserializers;"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.deser.KeyDeserializers;"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.deser.ValueInstantiators;"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.ser.Serializers;"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.type.TypeModifier;"
  },
  {
    "name": "[Lcom.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry;"
  },
  {
    "name": "[Ljava.lang.Class;"
  },
  {
    "name": "[Ljava.lang.String;"
  },
  {
    "name": "[Ljava.sql.Statement;"
  },
  {
    "name": "[Ljavax.net.ssl.KeyManager;"
  },
  {
    "name": "[Ljavax.net.ssl.TrustManager;"
  },
  {
    "name": "[Lscala.Tuple2;"
  },
  {
    "name": "[[I"
  },
  {
    "name": "akka.actor.ActorCell",
    "fields": [
      {
        "name": "akka$actor$dungeon$Children$$_childrenRefsDoNotCallMeDirectly"
      },
      {
        "name": "akka$actor$dungeon$Children$$_functionRefsDoNotCallMeDirectly"
      },
      {
        "name": "akka$actor$dungeon$Children$$_nextNameDoNotCallMeDirectly"
      },
      {
        "name": "akka$actor$dungeon$Dispatch$$_mailboxDoNotCallMeDirectly"
      }
    ]
  },
  {
    "name": "akka.actor.DefaultSupervisorStrategy",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "akka.actor.LightArrayRevolverScheduler",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.typesafe.config.Config",
          "akka.event.LoggingAdapter",
          "java.util.concurrent.ThreadFactory"
        ]
      }
    ]
  },
  {
    "name": "akka.actor.LightArrayRevolverScheduler$TaskHolder",
    "fields": [
      {
        "name": "task"
      }
    ]
  },
  {
    "name": "akka.actor.LocalActorRefProvider",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "akka.actor.ActorSystem$Settings",
          "akka.event.EventStream",
          "akka.actor.DynamicAccess"
        ]
      }
    ]
  },
  {
    "name": "akka.actor.LocalActorRefProvider$Guardian",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "akka.actor.SupervisorStrategy"
        ]
      }
    ]
  },
  {
    "name": "akka.actor.LocalActorRefProvider$SystemGuardian",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "akka.actor.SupervisorStrategy",
          "akka.actor.ActorRef"
        ]
      }
    ]
  },
  {
    "name": "akka.actor.Props$EmptyActor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "akka.actor.RepointableActorRef",
    "fields": [
      {
        "name": "_cellDoNotCallMeDirectly"
      },
      {
        "name": "_lookupDoNotCallMeDirectly"
      }
    ]
  },
  {
    "name": "akka.actor.typed.ActorRef"
  },
  {
    "name": "akka.actor.typed.internal.MiscMessageSerializer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "akka.actor.ExtendedActorSystem"
        ]
      }
    ]
  },
  {
    "name": "akka.actor.typed.internal.adapter.ActorRefAdapter"
  },
  {
    "name": "akka.actor.typed.internal.adapter.ActorSystemAdapter$LoadTypedExtensions$",
    "fields": [
      {
        "name": "MODULE$"
      }
    ]
  },
  {
    "name": "akka.actor.typed.internal.receptionist.DefaultServiceKey"
  },
  {
    "name": "akka.actor.typed.internal.receptionist.ServiceKeySerializer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "akka.actor.ExtendedActorSystem"
        ]
      }
    ]
  },
  {
    "name": "akka.actor.typed.receptionist.Receptionist$",
    "fields": [
      {
        "name": "MODULE$"
      }
    ]
  },
  {
    "name": "akka.dispatch.AbstractNodeQueue",
    "fields": [
      {
        "name": "_tailDoNotCallMeDirectly"
      }
    ]
  },
  {
    "name": "akka.dispatch.AbstractNodeQueue$Node",
    "fields": [
      {
        "name": "_nextDoNotCallMeDirectly"
      }
    ]
  },
  {
    "name": "akka.dispatch.BoundedControlAwareMessageQueueSemantics"
  },
  {
    "name": "akka.dispatch.BoundedDequeBasedMessageQueueSemantics"
  },
  {
    "name": "akka.dispatch.BoundedMessageQueueSemantics"
  },
  {
    "name": "akka.dispatch.ControlAwareMessageQueueSemantics"
  },
  {
    "name": "akka.dispatch.DequeBasedMessageQueueSemantics"
  },
  {
    "name": "akka.dispatch.Mailbox",
    "fields": [
      {
        "name": "_statusDoNotCallMeDirectly"
      },
      {
        "name": "_systemQueueDoNotCallMeDirectly"
      }
    ]
  },
  {
    "name": "akka.dispatch.MessageDispatcher",
    "fields": [
      {
        "name": "_inhabitantsDoNotCallMeDirectly"
      },
      {
        "name": "_shutdownScheduleDoNotCallMeDirectly"
      }
    ]
  },
  {
    "name": "akka.dispatch.MultipleConsumerSemantics"
  },
  {
    "name": "akka.dispatch.SingleConsumerOnlyUnboundedMailbox",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "akka.actor.ActorSystem$Settings",
          "com.typesafe.config.Config"
        ]
      }
    ]
  },
  {
    "name": "akka.dispatch.UnboundedControlAwareMessageQueueSemantics"
  },
  {
    "name": "akka.dispatch.UnboundedDequeBasedMessageQueueSemantics"
  },
  {
    "name": "akka.dispatch.UnboundedMailbox",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "akka.actor.ActorSystem$Settings",
          "com.typesafe.config.Config"
        ]
      }
    ]
  },
  {
    "name": "akka.dispatch.UnboundedMessageQueueSemantics"
  },
  {
    "name": "akka.event.EventStreamUnsubscriber",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "akka.event.EventStream",
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "akka.event.LoggerMailboxType",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "akka.actor.ActorSystem$Settings",
          "com.typesafe.config.Config"
        ]
      }
    ]
  },
  {
    "name": "akka.event.LoggerMessageQueueSemantics"
  },
  {
    "name": "akka.event.slf4j.Slf4jLogger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "akka.event.slf4j.Slf4jLoggingFilter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "akka.actor.ActorSystem$Settings",
          "akka.event.EventStream"
        ]
      }
    ]
  },
  {
    "name": "akka.http.impl.engine.client.PoolMasterActor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "akka.io.SelectionHandler",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "akka.io.SelectionHandlerSettings"
        ]
      }
    ]
  },
  {
    "name": "akka.io.TcpIncomingConnection",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "akka.io.TcpExt",
          "java.nio.channels.SocketChannel",
          "akka.io.ChannelRegistry",
          "akka.actor.ActorRef",
          "scala.collection.immutable.Iterable",
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "akka.io.TcpListener",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "akka.actor.ActorRef",
          "akka.io.TcpExt",
          "akka.io.ChannelRegistry",
          "akka.actor.ActorRef",
          "akka.io.Tcp$Bind"
        ]
      }
    ]
  },
  {
    "name": "akka.io.TcpManager",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "akka.io.TcpExt"
        ]
      }
    ]
  },
  {
    "name": "akka.pattern.PromiseActorRef",
    "fields": [
      {
        "name": "_stateDoNotCallMeDirectly"
      },
      {
        "name": "_watchedByDoNotCallMeDirectly"
      }
    ]
  },
  {
    "name": "akka.routing.ConsistentHashingPool",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.typesafe.config.Config"
        ]
      }
    ]
  },
  {
    "name": "akka.routing.RoundRobinPool",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.typesafe.config.Config"
        ]
      }
    ]
  },
  {
    "name": "akka.routing.RoutedActorCell$RouterActorCreator",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "akka.routing.RouterConfig"
        ]
      }
    ]
  },
  {
    "name": "akka.serialization.BooleanSerializer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "akka.actor.ExtendedActorSystem"
        ]
      }
    ]
  },
  {
    "name": "akka.serialization.ByteArraySerializer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "akka.actor.ExtendedActorSystem"
        ]
      }
    ]
  },
  {
    "name": "akka.serialization.ByteStringSerializer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "akka.actor.ExtendedActorSystem"
        ]
      }
    ]
  },
  {
    "name": "akka.serialization.DisabledJavaSerializer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "akka.actor.ExtendedActorSystem"
        ]
      }
    ]
  },
  {
    "name": "akka.serialization.IntSerializer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "akka.actor.ExtendedActorSystem"
        ]
      }
    ]
  },
  {
    "name": "akka.serialization.LongSerializer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "akka.actor.ExtendedActorSystem"
        ]
      }
    ]
  },
  {
    "name": "akka.serialization.SerializationExtension$",
    "fields": [
      {
        "name": "MODULE$"
      }
    ]
  },
  {
    "name": "akka.serialization.StringSerializer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "akka.actor.ExtendedActorSystem"
        ]
      }
    ]
  },
  {
    "name": "akka.serialization.jackson.AkkaJacksonModule",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "akka.serialization.jackson.AkkaStreamJacksonModule",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "akka.serialization.jackson.AkkaTypedJacksonModule",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "akka.serialization.jackson.JacksonCborSerializer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "akka.actor.ExtendedActorSystem",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "akka.serialization.jackson.JacksonJsonSerializer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "akka.actor.ExtendedActorSystem",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "akka.stream.Graph"
  },
  {
    "name": "akka.stream.SinkRef"
  },
  {
    "name": "akka.stream.SourceRef"
  },
  {
    "name": "akka.stream.SystemMaterializer$",
    "fields": [
      {
        "name": "MODULE$"
      }
    ]
  },
  {
    "name": "akka.stream.impl.streamref.StreamRefsProtocol"
  },
  {
    "name": "akka.stream.serialization.StreamRefSerializer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "akka.actor.ExtendedActorSystem"
        ]
      }
    ]
  },
  {
    "name": "akka.util.ByteString$ByteString1"
  },
  {
    "name": "akka.util.ByteString$ByteString1C"
  },
  {
    "name": "akka.util.ByteString$ByteStrings"
  },
  {
    "name": "application.service.ActionService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "application.service.ArticleQueryService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "application.service.ArticleService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "application.service.CommentQueryService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "application.service.CommentService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "application.service.RoleQueryService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "application.service.RoleService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "application.service.SiteQueryService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "application.service.UserQueryService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "application.service.UserService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "ch.qos.logback.classic.AsyncAppender",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.encoder.PatternLayoutEncoder",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.DateConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.LevelConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.LineSeparatorConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.LoggerConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.MDCConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.MessageConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.color.HighlightingCompositeConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.ConsoleAppender",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setWithJansi",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.FileAppender",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setFile",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.OutputStreamAppender",
    "methods": [
      {
        "name": "setEncoder",
        "parameterTypes": [
          "ch.qos.logback.core.encoder.Encoder"
        ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.encoder.LayoutWrappingEncoder",
    "methods": [
      {
        "name": "setCharset",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "setParent",
        "parameterTypes": [
          "ch.qos.logback.core.spi.ContextAware"
        ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.pattern.PatternLayoutEncoderBase",
    "methods": [
      {
        "name": "setPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.pattern.color.CyanCompositeConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.pattern.color.MagentaCompositeConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.ext.Java7SupportImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.datatype.jdk8.Jdk8Module",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.datatype.jsr310.JavaTimeModule",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.module.paramnames.ParameterNamesModule",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.module.scala.DefaultScalaModule",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.google.common.base.FinalizableReference",
    "methods": [
      {
        "name": "finalizeReferent",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.google.common.base.internal.Finalizer",
    "methods": [
      {
        "name": "startFinalizer",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.ref.ReferenceQueue",
          "java.lang.ref.PhantomReference"
        ]
      }
    ]
  },
  {
    "name": "com.google.common.util.concurrent.AbstractFuture",
    "fields": [
      {
        "name": "listeners"
      },
      {
        "name": "value"
      },
      {
        "name": "waiters"
      }
    ]
  },
  {
    "name": "com.google.common.util.concurrent.AbstractFuture$Waiter",
    "fields": [
      {
        "name": "next"
      },
      {
        "name": "thread"
      }
    ]
  },
  {
    "name": "com.google.inject.AbstractModule",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.google.inject.internal.Annotations",
    "methods": [
      {
        "name": "determineAnnotationToStringConfig",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.google.inject.internal.InjectorShell$RootModule",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.google.inject.name.Named",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.google.inject.util.Modules$2",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.google.inject.util.Modules$EmptyModule",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.google.inject.util.Modules$OverrideModule",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.google.inject.util.Providers$GuicifiedProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.google.inject.util.Providers$GuicifiedProviderWithDependencies",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "com.sun.crypto.provider.HmacCore$HmacSHA256",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.PBKDF2Core$HmacSHA256",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.TlsMasterSecretGenerator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.typesafe.sslconfig.ssl.NoopHostnameVerifier",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.zaxxer.hikari.HikariConfig",
    "allDeclaredFields": true
  },
  {
    "name": "controllers.Assets",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "controllers.AssetsBuilder",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "controllers.AssetsConfigurationProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "controllers.AssetsFinderProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "controllers.AssetsMetadataProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "controllers.AssetsModule",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "infra.auth.AuthenticationAction",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "infra.auth.AuthorizationAction",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "infra.db.repository.impl.ActionRepositoryImpl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "infra.db.repository.impl.ArticleQueryRepositoryImpl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "infra.db.repository.impl.ArticleRepositoryImpl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "infra.db.repository.impl.CommentQueryRepositoryImpl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "infra.db.repository.impl.CommentRepositoryImpl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "infra.db.repository.impl.RoleQueryRepositoryImpl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "infra.db.repository.impl.RoleRepositoryImpl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "infra.db.repository.impl.UserQueryRepositoryImpl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "infra.db.repository.impl.UserRepositoryImpl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "infra.filters.Filters",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "infra.filters.LoggingFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "infra.inject.Module",
    "queryAllDeclaredMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "infra.mail.MailServiceImpl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "infra.oss.AliyunOssRepository",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "interfaces.controller.ArticleController",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "interfaces.controller.CommentController",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "interfaces.controller.FileController",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "interfaces.controller.RoleController",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "interfaces.controller.SiteController",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "interfaces.controller.UserController",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "java.io.FilePermission"
  },
  {
    "name": "java.io.Serializable"
  },
  {
    "name": "java.lang.Boolean",
    "methods": [
      {
        "name": "parseBoolean",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.lang.Byte",
    "methods": [
      {
        "name": "parseByte",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.lang.ClassValue"
  },
  {
    "name": "java.lang.Double",
    "methods": [
      {
        "name": "parseDouble",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.lang.Float",
    "methods": [
      {
        "name": "parseFloat",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.lang.Integer",
    "methods": [
      {
        "name": "parseInt",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.lang.Long",
    "methods": [
      {
        "name": "parseLong",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.lang.Object",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.RuntimePermission"
  },
  {
    "name": "java.lang.SecurityManager",
    "methods": [
      {
        "name": "checkPermission",
        "parameterTypes": [
          "java.security.Permission"
        ]
      }
    ]
  },
  {
    "name": "java.lang.Short",
    "methods": [
      {
        "name": "parseShort",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.lang.String",
    "fields": [
      {
        "name": "value"
      }
    ]
  },
  {
    "name": "java.lang.System",
    "methods": [
      {
        "name": "getSecurityManager",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.Thread",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.ThreadGroup",
          "java.lang.Runnable",
          "java.lang.String",
          "long",
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "java.lang.invoke.VarHandle",
    "methods": [
      {
        "name": "releaseFence",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.management.ManagementFactory",
    "methods": [
      {
        "name": "getRuntimeMXBean",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.management.RuntimeMXBean",
    "methods": [
      {
        "name": "getInputArguments",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.net.NetPermission"
  },
  {
    "name": "java.net.SocketPermission"
  },
  {
    "name": "java.net.URLPermission",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.nio.Bits",
    "fields": [
      {
        "name": "UNALIGNED"
      }
    ]
  },
  {
    "name": "java.nio.Buffer",
    "fields": [
      {
        "name": "address"
      }
    ]
  },
  {
    "name": "java.nio.DirectByteBuffer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "long",
          "int"
        ]
      }
    ]
  },
  {
    "name": "java.security.AccessController",
    "methods": [
      {
        "name": "doPrivileged",
        "parameterTypes": [
          "java.security.PrivilegedExceptionAction"
        ]
      }
    ]
  },
  {
    "name": "java.security.AlgorithmParametersSpi"
  },
  {
    "name": "java.security.AllPermission"
  },
  {
    "name": "java.security.KeyStoreSpi"
  },
  {
    "name": "java.security.MessageDigestSpi"
  },
  {
    "name": "java.security.SecureRandomParameters"
  },
  {
    "name": "java.security.SecurityPermission"
  },
  {
    "name": "java.util.PropertyPermission"
  },
  {
    "name": "javax.management.ObjectName"
  },
  {
    "name": "javax.security.auth.x500.X500Principal",
    "fields": [
      {
        "name": "thisX500Name"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "sun.security.x509.X500Name"
        ]
      }
    ]
  },
  {
    "name": "javax.smartcardio.CardPermission"
  },
  {
    "name": "jdk.internal.misc.Unsafe",
    "methods": [
      {
        "name": "getUnsafe",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.postgresql.Driver",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "play.DefaultApplication",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.Environment",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.api.DefaultApplication",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.api.OptionalSourceMapperProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.api.cache.caffeine.CacheManagerProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.api.cache.caffeine.CaffeineCacheModule",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "play.api.cache.caffeine.NamedAsyncCacheApiProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "play.api.cache.caffeine.NamedCachedProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "play.api.cache.caffeine.NamedCaffeineCacheProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "play.api.cache.caffeine.NamedJavaAsyncCacheApiProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "play.api.cache.caffeine.NamedJavaSyncCacheApiProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "play.api.cache.caffeine.NamedSyncCacheApiProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "play.api.db.slick.DefaultSlickApi",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.api.db.slick.NamedDatabaseConfigProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "play.api.db.slick.SlickModule",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "play.api.http.DefaultFileMimeTypesProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.api.http.DefaultHttpErrorHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.api.http.DefaultHttpFilters",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "play.api.http.DefaultHttpRequestHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "play.api.http.EnabledFilters",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.api.http.HttpConfiguration$ActionCompositionConfigurationProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.api.http.HttpConfiguration$CookiesConfigurationProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.api.http.HttpConfiguration$FileMimeTypesConfigurationProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.api.http.HttpConfiguration$FlashConfigurationProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.api.http.HttpConfiguration$HttpConfigurationProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.api.http.HttpConfiguration$ParserConfigurationProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.api.http.HttpConfiguration$SecretConfigurationProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.api.http.HttpConfiguration$SessionConfigurationProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.api.http.JavaCompatibleHttpRequestHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.api.http.JavaHttpErrorHandlerDelegate",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.api.http.JavaHttpFiltersDelegate",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.api.i18n.DefaultLangsProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.api.i18n.DefaultMessagesApiProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.api.i18n.I18nModule",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "play.api.inject.BindingKey$$anon$1",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "play.api.inject.BuiltinModule",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "play.api.inject.ConfigProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.api.inject.DefaultApplicationLifecycle",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.api.inject.RoutesProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.api.inject.guice.GuiceApplicationLoader",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "play.api.inject.guice.GuiceInjector",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.api.inject.guice.GuiceInjectorWithClassLoaderProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.api.inject.guice.GuiceableModuleConversions$$anon$4",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "play.api.libs.Files$DefaultTemporaryFileCreator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.api.libs.Files$DefaultTemporaryFileReaper",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.api.libs.Files$TemporaryFileReaperConfigurationProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.api.libs.concurrent.ActorSystemProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.api.libs.concurrent.AkkaSchedulerProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.api.libs.concurrent.ClassicActorSystemProviderProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.api.libs.concurrent.CoordinatedShutdownProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.api.libs.concurrent.DefaultFutures",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.api.libs.concurrent.ExecutionContextProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.api.libs.concurrent.MaterializerProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.api.libs.crypto.CSRFTokenSignerProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.api.libs.crypto.CookieSignerProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.api.libs.logback.LogbackLoggerConfigurator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "play.api.libs.mailer.MailerModule",
    "queryAllDeclaredMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "play.api.libs.mailer.MockMailer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.api.libs.mailer.SMTPConfigurationModule",
    "queryAllDeclaredMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "play.api.libs.mailer.SMTPConfigurationProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.api.libs.mailer.SMTPDynamicMailer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.api.mvc.ActionBuilderImpl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "play.api.mvc.BodyParsers$Default",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.api.mvc.CookiesModule",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "play.api.mvc.DefaultActionBuilderImpl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.api.mvc.DefaultControllerComponents",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.api.mvc.DefaultCookieHeaderEncoding",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.api.mvc.DefaultFlashCookieBaker",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.api.mvc.DefaultMessagesActionBuilderImpl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.api.mvc.DefaultMessagesControllerComponents",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.api.mvc.DefaultPlayBodyParsers",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.api.mvc.DefaultSessionCookieBaker",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.api.mvc.MessagesActionBuilderImpl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "play.api.mvc.request.DefaultRequestFactory",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.cache.NamedCache",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "play.core.j.DefaultJavaContextComponents",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.core.j.DefaultJavaHandlerComponents",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.core.j.JavaRouterAdapter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.core.routing.GeneratedRouter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "play.core.server.AkkaHttpServerProvider",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "play.db.NamedDatabase",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "play.filters.cors.CORSConfigProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.filters.cors.CORSFilter"
  },
  {
    "name": "play.filters.cors.CORSFilterProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.filters.cors.CORSModule",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "play.filters.csp.CSPConfigProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.filters.csp.CSPFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.filters.csp.CSPModule",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "play.filters.csp.DefaultCSPActionBuilder",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.filters.csp.DefaultCSPProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.filters.csp.DefaultCSPReportActionBuilder",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.filters.csp.DefaultCSPReportBodyParser",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.filters.csp.DefaultCSPResultProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.filters.csrf.CSRF$CSRFHttpErrorHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.filters.csrf.CSRF$JavaCSRFErrorHandlerDelegate",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.filters.csrf.CSRF$TokenProviderProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.filters.csrf.CSRFConfigProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.filters.csrf.CSRFFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.filters.csrf.CSRFModule",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "play.filters.gzip.GzipFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.filters.gzip.GzipFilterConfigProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.filters.gzip.GzipFilterModule",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "play.filters.headers.SecurityHeadersConfigProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.filters.headers.SecurityHeadersFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.filters.headers.SecurityHeadersModule",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "play.filters.hosts.AllowedHostsConfigProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.filters.hosts.AllowedHostsFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.filters.hosts.AllowedHostsModule",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "play.filters.https.RedirectHttpsConfigurationProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.filters.https.RedirectHttpsFilter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.filters.https.RedirectHttpsModule",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "play.http.DefaultActionCreator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.http.DefaultHttpFilters",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "play.http.DefaultHttpRequestHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.i18n.Langs",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.i18n.MessagesApi",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.inject.DelegateInjector",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.libs.concurrent.HttpExecutionContext",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.libs.crypto.DefaultCSRFTokenSigner",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "play.mvc.FileMimeTypes",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "router.Routes",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "scala.Boolean"
  },
  {
    "name": "scala.Int"
  },
  {
    "name": "scala.Long"
  },
  {
    "name": "slick.jdbc.PostgresProfile$",
    "fields": [
      {
        "name": "MODULE$"
      }
    ]
  },
  {
    "name": "slick.jdbc.hikaricp.HikariCPJdbcDataSource$",
    "fields": [
      {
        "name": "MODULE$"
      }
    ]
  },
  {
    "name": "sun.misc.Unsafe",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "copyMemory",
        "parameterTypes": [
          "java.lang.Object",
          "long",
          "java.lang.Object",
          "long",
          "long"
        ]
      },
      {
        "name": "defineAnonymousClass",
        "parameterTypes": [
          "java.lang.Class",
          "byte[]",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "getAndSetObject",
        "parameterTypes": [
          "java.lang.Object",
          "long",
          "java.lang.Object"
        ]
      },
      {
        "name": "invokeCleaner",
        "parameterTypes": [
          "java.nio.ByteBuffer"
        ]
      }
    ]
  },
  {
    "name": "sun.nio.ch.SelectorImpl",
    "fields": [
      {
        "name": "publicSelectedKeys"
      },
      {
        "name": "selectedKeys"
      }
    ]
  },
  {
    "name": "sun.security.pkcs12.PKCS12KeyStore",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.pkcs12.PKCS12KeyStore$DualFormatPKCS12",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.JavaKeyStore$JKS",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.NativePRNG",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.SHA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.SHA2$SHA256",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.X509Factory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.rsa.RSAKeyFactory$Legacy",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.ssl.KeyManagerFactoryImpl$SunX509",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.ssl.SSLContextImpl$DefaultSSLContext",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.ssl.SSLContextImpl$TLS12Context",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.ssl.TrustManagerFactoryImpl$PKIXFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.x509.AuthorityInfoAccessExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.AuthorityKeyIdentifierExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.BasicConstraintsExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.CRLDistributionPointsExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.CertificatePoliciesExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.ExtendedKeyUsageExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.IssuerAlternativeNameExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.KeyUsageExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.NetscapeCertTypeExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.PrivateKeyUsageExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.SubjectAlternativeNameExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.SubjectKeyIdentifierExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  }
]
